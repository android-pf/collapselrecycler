apply plugin: 'com.android.application'
apply plugin: 'android-apt'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId "com.garyhu.citypickerdemo"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField 'String','API_SERVER_URL','"http://api.miaodj.cn"'
    }
    signingConfigs {//签名的配置
        release {
            storeFile file("garyhu.jks")
            storePassword 'garyhu'
            keyAlias 'android'
            keyPassword 'garyhu'
        }
    }
    buildTypes {
        release {
            minifyEnabled true//是否启动混淆
            zipAlignEnabled false//是否启动zipAlign
            shrinkResources true //是否移除无用资源文件，shrinkResources依赖于minifyEnabled，必须和minifyEnabled一起用
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release//打包命令行：gradlew assembleRelease
            applicationVariants.all { variant ->
                if (variant.buildType.name.equals('release')) {
                    variant.outputs.each { output ->
                        def outputFile = output.outputFile
                        if (outputFile != null && outputFile.name.endsWith('.apk')) {
                            def fileName = "gradle4android_v${defaultConfig.versionName}_${releaseTime()}_${variant.flavorName}.apk"
                            output.outputFile = new File(outputFile.parent, fileName)
                        }
                    }
                }
            }
            //针对很多渠道
            productFlavors.all { flavor ->
                manifestPlaceholders.put("UMENG_CHANNEL_VALUE", name)
            }
        }
    }
    productFlavors {//多渠道打包，命令行打包：gradlew assembleRelease
        xiaomi {
            applicationId 'com.garyhu.demo'
            //manifestPlaceholders.put("UMENG_CHANNEL_VALUE", 'xiaomi')
        }

        googlepaly {
            applicationId 'com.garyhu.demo'
            //manifestPlaceholders.put("UMENG_CHANNEL_VALUE", 'googlepaly')
        }
    }

//    lintOptions {//设置编译的lint开关，程序在buid的时候，会执行lint检查，有任何的错误或者警告提示，都会终止构建
//        abortOnError false
//    }
    //被注释了
//    compileOptions {//可以进行 Java 的版本配置，以便使用对应版本的一些新特性,让IDE使用JAVA8语法解析
//        sourceCompatibility JavaVersion.VERSION_1_8
//        targetCompatibility JavaVersion.VERSION_1_8
//    }
}

dependencies {
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile rootProject.ext.dependencies["appcompatV7"]
    testCompile 'junit:junit:4.12'
    compile 'me.leefeng:citypicker:1.0'
    //首页banner
    compile 'com.bigkoo:convenientbanner:2.0.5'
    //动画库
    compile 'com.ToxicBakery.viewpager.transforms:view-pager-transforms:1.2.32@aar'
    //fresco的图片加载
    compile 'com.facebook.fresco:fresco:0.12.0'
    compile 'com.facebook.fresco:animated-gif:0.12.0'
    //facebook的弹簧动画库
    compile 'com.facebook.rebound:rebound:0.3.8'
    compile rootProject.ext.dependencies["design"]
    //仿通讯录的RecyclerView
    compile project(path: ':indexablerecyclerview')
    //下拉刷新
    compile 'in.srain.cube:ultra-ptr:1.0.11'
    //图片加载
    compile 'com.github.bumptech.glide:glide:3.7.0'
    //Tablayout
    compile 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.0@aar'
    //绑定控件的
    compile 'com.jakewharton:butterknife:8.4.0'
    apt 'com.jakewharton:butterknife-compiler:8.4.0'
    //基类
    compile 'me.yokeyword:fragmentation:0.8.5'
    //对话框
    compile project(path: ':sweetdialog')
    //侧滑删除和上拉加载下拉刷新的RecyclerView
    compile 'com.yanzhenjie:recyclerview-swipe:1.0.2'
    //手势放大图片
    compile 'com.commit451:PhotoView:1.2.4'
    //网络请求
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.squareup.okhttp3:okhttp:3.2.0'
    //gson解析
    compile 'com.google.code.gson:gson:2.6.2'
    compile project(':dialog')
}
def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}
